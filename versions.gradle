ext.deps = [:]

def versions = [:]
versions.kotlin = "1.3.61"

versions.android_gradle_plugin = '3.6.0'
versions.support = "28.0.0"
versions.compact = "1.1.0"
versions.core_ktx = "1.0.2"
versions.constraintlayout = "1.1.3"
versions.cardview = "28.0.0"
versions.recyclerview = "28.0.0"
versions.lifecycle = "1.1.0"
versions.lifecycle_viewmodel_ktx = "2.2.0"
versions.lifecycle_livedata_ktx = "2.2.0"
versions.fragment_ktx = "1.2.2"
versions.multidex = "2.0.1"

versions.dagger = "2.26"

versions.retrofit = "2.7.1"
versions.retrofit_converter_gson = "2.7.1"
versions.retrofit_coroutines = "0.9.2"
versions.logging_interceptor = "3.12.1"

versions.okhttp3 = "4.3.1"
versions.logging_interceptor = "4.3.1"

versions.junit = "4.12"
versions.androidx_test = "1.1.1"
versions.expresso = "3.2.0"
versions.mockito = "2.2.0"

def langs = [:]
langs.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
langs.kotlin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
langs.kotlin_version = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
ext.langs = langs

def build_versions = [:]
build_versions.compileSdkVersion = 29
build_versions.buildToolsVersion = "29.0.2"
build_versions.applicationId = "com.farahaniconsulting.gumtree"
build_versions.minSdkVersion = "26"
build_versions.target_sdk = 29
build_versions.version_code = 1
build_versions.version_name = "1.0.0"
ext.build_versions = build_versions

def androidx = [:]
androidx.appcompact = "androidx.appcompat:appcompat:$versions.compact"
androidx.corektx = "androidx.core:core-ktx:$versions.core_ktx"
androidx.constraintlayout = "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"
androidx.cardview = "com.android.support:cardview-v7:$versions.cardview"
androidx.recyclerview = "com.android.support:recyclerview-v7:$versions.recyclerview"
androidx.lifecycle_viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle_viewmodel_ktx"
androidx.lifecycle_livedata_ktx = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle_livedata_ktx"
androidx.fragment_ktx =  "androidx.fragment:fragment-ktx:$versions.fragment_ktx"
androidx.multidex = "androidx.multidex:multidex:$versions.multidex"

deps.androidx = androidx

def lifecycle = [:]
lifecycle.extensions = "android.arch.lifecycle:extensions:$versions.lifecycle"
lifecycle.viewmodel = "android.arch.lifecycle:viewmodel:$versions.lifecycle"

deps.lifecycle = lifecycle

def dagger = [:]
dagger.dagger = "com.google.dagger:dagger:$versions.dagger"
dagger.androidx_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler =  "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.annotationProcessor = "com.google.dagger:dagger-android-processor:$versions.dagger"

deps.dagger = dagger

def retrofit = [:]
retrofit.retrofit = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.coroutines = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$versions.retrofit_coroutines"
retrofit.gsonConverter = "com.squareup.retrofit2:converter-gson:$versions.retrofit_converter_gson"

deps.retrofit = retrofit

def okhttp = [:]
okhttp.okhttp = "com.squareup.okhttp3:okhttp:$versions.okhttp"
okhttp.interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.logging_interceptor"

deps.okhttp = okhttp

def test = [:]
test.junit = "junit:junit:$versions.junit"
test.androidx_test = "androidx.test.ext:junit:$versions.androidx_test"
test.expresso = "androidx.test.espresso:espresso-core:$versions.expresso"
test.mockito = "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockito"

deps.test = test


static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

ext.addRepos = this.&addRepos